- 多态性
    Person p1 = new Man();

    p1.eat();
    编译看左边，运行看右边

    多态性的使用前提：
        1.要有类的继承关系
        2.要有方法的重写

    多态的适用性：
        只适用于方法，属性不适用

    好处：
        极大的减少了代码的冗余，减少方法的重载

    弊端：
        不能调用子类中特有的方法和属性，只能调用重写的方法

    建议在向下转型前，使用 instanceof 进行判断，避免出现类型转换异常
        格式：a instanceof A
        判断 a 是否是 A 的实例对象
        返回值：true/false