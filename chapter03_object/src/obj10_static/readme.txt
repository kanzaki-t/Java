- static
    静态的

    用来修饰的结构：
        属性
        方法
        代码块
        内部类

    对比静态变量和实例变量：
    1.个数
        静态变量：在内存空间中只有一份，被类的多个对象所共享
        实例变量：类的每一个实例对象都保存着一份实例对象
    2.内存位置
        静态变量：jdk6之前，存放在方法区，jdk7之后存放在堆空间
        实例变量：存放在堆空间的对象实体中
    3.加载时机
        静态变量：随着类的加载而加载，由于类只会加载一次，所以静态变量也只有一份
        实例变量：随着实例对象的创建而加载
    4.消亡实际
        静态变量：随着类的卸载而消亡
        实例变量：随着实例对象的卸载而消亡

    静态方法和静态属性 的使用方法一致
    static修饰的方法内，不能使用this和super

    什么时候需要将属性声明为静态的？
        判断当前类的多个实例是否能共享此成员变量，且成员变量的值是相同的
        开发中，常将一些常量声明是静态的。

    什么时候需要将方法声明为静态的？
        方法内操作的变量是静态变量的话，则此方法建议声明为静态
        开发中，常常将工具类中的方法设置成静态